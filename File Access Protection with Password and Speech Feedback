' Description: This project secures access to a Microsoft Excel workbook by requiring a password upon opening.
'              The entered password is hashed using a custom hashing algorithm and compared to a stored hash.
'              If the correct password is entered, a speech message welcomes the user. 
'              An incorrect password triggers an error message and the workbook closes immediately.
'              The password is securely stored as a hash to prevent exposure in the code.

' Key Features:
' 1. File Access Protection:
'    - An InputBox prompts users for a password when the workbook is opened.
'    - The entered password is hashed using a simple hashing function and compared to a stored hash for validation.
'
' 2. Speech Feedback:
'    - On successful entry, the application speaks a welcome message.
'    - If the password is incorrect, the application speaks an error message and closes the workbook.
'
' 3. Secure Password Handling:
'    - The password is hashed and stored securely in the code using a custom hash function.
'    - This approach ensures the password remains protected and is not visible in plain text.

' Usage Instructions:
' - First, you need to manually generate the hash of your password (E.G '1998') using the SimpleHash function.
' run the GeneratePasswordHash subroutine with the SimpleHash function in module
Sub GeneratePasswordHash()
    MsgBox "Hashed Password: " & SimpleHash("1998")
End Sub

Function SimpleHash(ByVal str As String) As String
    Dim i As Long
    Dim hash As Long
    hash = 0
    
    ' Iterate over each character in the string
    For i = 1 To Len(str)
        ' Convert the character to its ASCII value and modify the hash
        hash = ((Asc(Mid(str, i, 1)) * (i + 1)) + hash) Mod 1000000
    Next i
    
    ' Return the hash as a string
    SimpleHash = CStr(hash)
End Function

' It will display a message box with the hashed version of the password (1998). Remember this hash
' You can delete the GeneratePasswordHash subroutine and the SimpleHash function at this point

' Replace the plain text password with the hash in your Workbook_Open event code below. Note: Also add the SimpleHash function
Private Sub Workbook_Open()
    ' Declare variables for user input and correct password hash
    Dim userPassword As String
    Dim correctPasswordHash As String
    
    ' Store the hash of the correct password (hash of "1991")
    correctPasswordHash = "the_hash_value_you_generated" ' Replace with the actual generated hash value
    
    ' Announce the need for a password using speech
    Application.Speech.Speak "You are opening the NI1 reconciliation sheet, password is needed"
    
    ' Prompt the user to enter a password
    userPassword = InputBox("Access Control:", "NI1 RECON WORKSHEET")
    
    ' Check if the entered password hash matches the stored hash
    If SimpleHash(userPassword) = correctPasswordHash Then
        ' If the password is correct, welcome the user
        Application.Speech.Speak "Welcome to the workbook."
    Else
        ' If the password is incorrect, notify the user and close the workbook
        Application.Speech.Speak "Wrong password. Please try again."
        ThisWorkbook.Close SaveChanges:=False
    End If
End Sub

' - When the workbook opens, you will be prompted to enter a password.
' - Enter the correct password to unlock the workbook and hear a welcome message.
' - If the wrong password is entered, the workbook will notify you with an error message and close.

' Function to hash the password using a simple custom algorithm
Function SimpleHash(ByVal str As String) As String
    Dim i As Long
    Dim hash As Long
    hash = 0
    
    ' Iterate over each character in the string
    For i = 1 To Len(str)
        ' Convert the character to its ASCII value and modify the hash
        hash = ((Asc(Mid(str, i, 1)) * (i + 1)) + hash) Mod 1000000
    Next i
    
    ' Return the hash as a string
    SimpleHash = CStr(hash)
End Function

